#!/bin/bash

#
# Runner
#   $ printf "pack ./isofs\n" | nc -C localhost 8121 | WORKDIR=/tmp/foo sudo -E /bin/bash -s /run/scripts/installer.sh
#   $ printf "pack ./isofs\n" | nc -C localhost 8121 | sudo /bin/bash -s /run/scripts/installer.sh
#

CURDIR=$(pwd)

#
# WORKDIR
#	- remove any trailing slash
#
WORKDIR="${WORKDIR:-}"
WORKDIR="${WORKDIR%/}"

LOGFILE=${WORKDIR}/var/log/auto_installer.log

B64ENCODED_TARBALL="\
{{ b64encoded_tarball -}}"

mounts=("bin" "dev" "lib" "lib64" "proc" "sys")

#
# cleanup
#
cleanup() {
	for mount in ${mounts[@]}; do
		src="/${mount}"
		dest="${WORKDIR}/${mount}"
		if [ "${dest}" != "${src}" ]; then
			mountpoint -q $dest
			if [ $? -eq 0 ]; then
				1>&2 echo ">>> unmount: $dest"
				umount $dest
			fi
		fi
	done
	cd $CURDIR

	# TODO - remove working directory?
}
trap cleanup EXIT

log_header() {
	printf "[ $(date +%Y-%m-%dT%H:%M:%S) ]\n"
	if [ -n "$1" ]; then
		echo "$1:"
	fi
}

log_pipe() {
	if [ $1 -gt 0 ]; then
		spaces=$(printf ' %.0s' $(seq 1 $1))
		pattern="s/^/$spaces/"
	else
		pattern="s/^//"
	fi
	sed -e "$pattern" | /usr/bin/tee -a $LOGFILE
}

install() {
	mkdir -p "$WORKDIR/var/log"

	log_header "$@" | log_pipe 0

	printf "\nWORKDIR:\n" | log_pipe 2
	printf "$WORKDIR/:\n" | log_pipe 4

	# extract filesystem into working directory
	printf "\ntarball:\n" | log_pipe 2
	tar_args="-C $WORKDIR/ --no-same-owner --owner=root --group=root -xzv"
	echo "$B64ENCODED_TARBALL" \
		| /usr/bin/base64 -d \
		| /usr/bin/tar -C "$WORKDIR/" \
			--no-same-owner \
			--owner=root --group=root \
			-xzv \
		| log_pipe 4

	# set up bind mounts
	for mount in ${mounts[@]}; do
		src="/${mount}"
		dest="${WORKDIR}/${mount}"
		if [ "$dest" != "$src" ]; then
			mkdir -p $dest
			mountpoint -q $dest
			if [ $? -ne 0 ]; then
				1>&2 echo ">>> mount: $src -> $dest"
				mount -o bind,ro "${src}" "${dest}"
			fi
		fi
	done

	# run a custom script, if specified
	if [ -n "$1" ]; then
		if [ -z "$WORKDIR" ]; then
			/bin/bash "$1" 2>&1 | log_pipe 2
		else
			1>&2 echo ">>> using chroot"
			chroot "$WORKDIR/" /bin/bash "$1" 2>&1 | log_pipe 2
		fi
	fi
	printf "\n" | log_pipe 0
}

install "$@"
